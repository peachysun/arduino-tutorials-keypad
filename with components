#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <TM1637Display.h>
#include <Servo.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

int iup = 0;
int idown = 9999;

int pinBuzzer = 25;

Servo myservo;  // create servo object to control a servo
int pos = 0;    // variable to store the servo position

#define CLK 12
#define DIO 11

LiquidCrystal_I2C lcd(0x27, 20, 4);

const byte ROWS = 4;
const byte COLS = 4;

char keys[ROWS][COLS] = {

  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}

};

byte rowPins[ROWS] = {10, 9, 8, 7};
byte colPins[COLS] = {6, 5, 4, 3};

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

TM1637Display display(CLK, DIO);

//uint8_t data[] = { 0xff, 0xff, 0xff, 0xff };
uint8_t blank[] = { 0x00, 0x00, 0x00, 0x00 };
String password = "8603";
String inppas;
int kondisi = 0;
int a = 0, b = 0, c = 0, d = 0;
int total;

const uint8_t strip[] = {
  SEG_G,
  SEG_G,
  SEG_G,
  SEG_G,
};

const unsigned char PROGMEM andra  []  = {
  // 'potentiometer-icon-illustration-potentiometer-icon-illustration-isolated-white-background-106377739', 128x64px
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x01, 0xe7, 0xfc, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfc, 0x1f, 0xe7, 0xfc, 0x7f, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xf0, 0xff, 0xe7, 0xfc, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xe3, 0xff, 0xe7, 0xfc, 0x7f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xc7, 0xff, 0xe7, 0xfc, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x8f, 0xff, 0xe7, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xff, 0xe7, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xff, 0xe3, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xff, 0xf0, 0x00, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x8f, 0xff, 0xfc, 0x03, 0xff, 0xfe, 0x00, 0x00, 0xfc, 0x0f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x98, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xc1, 0xe1, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9e, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xe0, 0x01, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xc0, 0x1f, 0xff, 0x80, 0x3c, 0x03, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xfc, 0x00, 0x00, 0x03, 0xff, 0x00, 0x7f, 0xfe, 0x1f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0x0f, 0x00, 0xff, 0x10, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0x1e, 0x01, 0xc1, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0x1f, 0xc0, 0x00, 0x7f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xfc, 0x3c, 0x3f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xfc, 0x00, 0x3f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x03, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xfc, 0x0f, 0x80, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0x00, 0x3f, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x07, 0xff, 0xc1, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

byte customChar[8] = {
  0b00000,
  0b01010,
  0b11111,
  0b11111,
  0b01110,
  0b00100,
  0b00000,
  0b00000
};


float floatMap(float x, float in_min, float in_max, float out_min, float out_max)
{
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

void setup() {
  myservo.attach(13);

  pinMode(pinBuzzer, OUTPUT);
  pinMode(30, OUTPUT); //Sebagai fungsi untuk menjadikan port D13 sebagai OUTPUT
  pinMode(32, OUTPUT); //Sebagai fungsi untuk menjadikan port D12 sebagai OUTPUT
  pinMode(34, OUTPUT);

  oled.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
  // oled.clearDisplay();

  lcd.init();                      // initialize the lcd

  // Print a message to the LCD.

  lcd.backlight();

  display.setBrightness(4);
  display.setSegments(strip);

  lcd.print("HALOOO"); //Display a intro message
  lcd.setCursor(0, 1);   // set the cursor to column 0, line 1
  lcd.createChar(0, customChar); // create a new custom character
  lcd.setCursor (7, 0); // move cursor to (2, 0)
  lcd.write((byte)0);  // print the custom char at (2, 0)
  delay(2000); //Wait for display to show info
  lcd.clear(); //Then clean it

  digitalWrite(pinBuzzer, HIGH);
  delay(500);
  digitalWrite(pinBuzzer, LOW);
  delay(500);
  digitalWrite(pinBuzzer, HIGH);
  delay(500);
  digitalWrite(pinBuzzer, LOW);
  delay(500);
  digitalWrite(pinBuzzer, HIGH);
  delay(500);
  digitalWrite(pinBuzzer, LOW);
  delay(500);
  digitalWrite(pinBuzzer, HIGH);
  delay(500);
  digitalWrite(pinBuzzer, LOW);
  delay(500);

  digitalWrite(30, HIGH);
  delay(500);
  digitalWrite(30, LOW);
  delay(500);
  digitalWrite(30, HIGH);
  delay(500);
  digitalWrite(30, LOW);
  delay(500);
  digitalWrite(32, HIGH);
  delay(500);
  digitalWrite(32, LOW);
  delay(500);
  digitalWrite(32, HIGH);
  delay(500);
  digitalWrite(32, LOW);
  delay(500);
  digitalWrite(34, HIGH);
  delay(500);
  digitalWrite(34, LOW);
  delay(500);
  digitalWrite(34, HIGH);
  delay(500);
  digitalWrite(34, LOW);
  delay(500);

  kondisi = 3;

}

void loop() {

  while (kondisi == 0)
  {
    char key = keypad.getKey();
    if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '#' && key != '*' )
      {
        if (key == '0')
        {
          a = b;
          b = c;
          c = d;
          d = 0;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '1')
        {
          a = b;
          b = c;
          c = d;
          d = 1;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '2')
        {
          a = b;
          b = c;
          c = d;
          d = 2;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '3')
        {
          a = b;
          b = c;
          c = d;
          d = 3;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '4')
        {
          a = b;
          b = c;
          c = d;
          d = 4;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '5')
        {
          a = b;
          b = c;
          c = d;
          d = 5;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '6')
        {
          a = b;
          b = c;
          c = d;
          d = 6;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '7')
        {
          a = b;
          b = c;
          c = d;
          d = 7;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '8')
        {
          a = b;
          b = c;
          c = d;
          d = 8;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '9')
        {
          a = b;
          b = c;
          c = d;
          d = 9;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        inppas = String(total);



      }
      else if (key == 'A')
      {
        if (inppas == password)
        {

          lcd.clear();
          kondisi = 1;
        }
        else
        {
          kondisi = 2;
        }
      }


      else if (key = 'C')
      {
        kondisi = 0;
        total = a = b = c = d = 0;
        inppas = "";
      }


    }
    display.showNumberDec(total, true);
  }

  while (kondisi == 1)
  {

    display.showNumberDec(0, true);
    lcd.clear(); //Then clean it
    lcd.print("PASS SUDAH BENAR");
    delay(1000); //Wait for display to show info
    lcd.clear(); //Then clean it

    kondisi = 7;
  }

  while (kondisi == 2)
  {
    lcd.setCursor(0, 1);   // set the cursor to column 0, line 1
    lcd.clear(); //Then clean it
    lcd.print("MAAF PASS SALAH");
    delay(2000); //Wait for display to show info
    lcd.clear(); //Then clean it

    kondisi = 6;
  }

  while (kondisi == 3)
  {
    char key = keypad.getKey();
    lcd.setCursor(1, 0);   // set the cursor to column 0, line 1
    lcd.print("MENU");
    lcd.setCursor(1, 1);   // set the cursor to column 0, line 1
    lcd.print("PILIH ANGKA 1-9");


    if (key == '1')
    {
      lcd.clear();
      kondisi = 4;
    }
    if (key == '2')
    {
      lcd.clear();
      kondisi = 5;
    }
    if (key == '5')
    {
      lcd.clear();
      kondisi = 6;
    }


  }

  while (kondisi == 4)
  {
    oled.drawBitmap(0, 0, andra, 128, 64, 1);
    oled.display();
    delay(2000);

    int analogValue = analogRead(A0);
    // Rescale to potentiometer's voltage (from 0V to 5V):
    float voltage = floatMap(analogValue, 0, 1023, 0, 5);
    // print out the value you read:

    lcd.setCursor(1, 0);   // set the cursor to column 0, line 1
    lcd.print("POTENTIOMETER");

    lcd.setCursor(1, 1);   // set the cursor to column 0, line 1
    lcd.print("Analog: ");
    lcd.print(analogValue);
    display.showNumberDec(analogValue, true);

    lcd.setCursor(1, 2);   // set the cursor to column 0, line 1
    lcd.print("Voltage: ");
    lcd.println(voltage);

    myservo.write(analogValue);                  // sets the servo position according to the scaled value
    delay(15);

    char key = keypad.getKey();
    if (key == '0') {
      lcd.clear();
      kondisi = 3;
    }
  }

  while (kondisi == 5) {
    char key = keypad.getKey();
    if (key == '2') {
      for (pos = 0; pos <= 180; pos += 1) { // rotate from 0 degrees to 180 degrees
        // in steps of 1 degree
        myservo.write(pos);                   // tell servo to go to position in variable 'pos'
        delay(10);   // waits 10ms for the servo to reach the position
        char key = keypad.getKey();
        if (key == '3') {
          for (pos = 180; pos >= 0; pos -= 1) { // rotate from 180 degrees to 0 degrees
            myservo.write(pos);                   // tell servo to go to position in variable 'pos'
            delay(10);
          }
        }
        if (key == '0') {
          lcd.clear();
          kondisi = 3;
        }
      }
    }
  }

  while (kondisi == 6) {
    lcd.print("MASUKKAN PASS"); //Display a intro message
    lcd.setCursor(0, 1);   // set the cursor to column 0, line 1
    kondisi = 0;
  }

  while (kondisi == 7) {
    char key = keypad.getKey();
    if (key == 'A') {
      lcd.print("COUNTING UP");
      for (int i = 0 ; i < 9999; i++) {
        display.showNumberDec(iup, true);
        delay(500);
      }
      iup++;
    }
    display.showNumberDec(0, true);
    lcd.clear();
  }
}
